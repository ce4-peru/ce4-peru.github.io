sh_peru$NAME_1 <- recode(sh_peru$NAME_1, `Lima Province` = "Lima")
unique(sh_peru$NAME_1)
sh_peru$NAME_1 <- factor(sh_peru$NAME_1)
levels(sh_peru@data$NAME_1)
# Change names
str(sh_peru@data)
levels(sh_peru$NAME_1) <- c(levels(sh_peru$NAME_1),
c("Apurimac", "Huanuco",
"Junin", "San Martin"))
sh_peru_df <- sh_peru@data
sh_peru[3,6] <- "Apurimac"
sh_peru[9,6] <- "Huanuco"
sh_peru[12,6] <- "Junin"
sh_peru[23,6] <- "San Martin"
sh_peru_df <- sh_peru@data
sh_peru@data$NAME_1 <- factor(sh_peru@data$NAME_1)
levels(sh_peru@data$NAME_1)
# [1] "Amazonas"      "Ancash"        "Arequipa"      "Ayacucho"
# [5] "Cajamarca"     "Callao"        "Cusco"         "Huancavelica"
# [9] "Ica"           "La Libertad"   "Lambayeque"    "Lima"
# [13] "Loreto"        "Madre de Dios" "Moquegua"      "Pasco"
# [17] "Piura"         "Puno"          "Tacna"         "Tumbes"
# [21] "Ucayali"       "Apurimac"      "Huanuco"       "Junin"
# [25] "San Martin"
## plotting shapefiles
plot(sh_peru)
# Transformar a mayusculas
sh_peru[[6]] <- toupper(sh_peru[[6]])
str(sh_peru@data$NAME_1)
unique(sh_peru@data$NAME_1)
# [1] "AMAZONAS"      "ANCASH"        "APURIMAC"      "AREQUIPA"      "AYACUCHO"
# [6] "CAJAMARCA"     "CALLAO"        "CUSCO"         "HUANUCO"       "HUANCAVELICA"
# [11] "ICA"           "JUNIN"         "LA LIBERTAD"   "LAMBAYEQUE"    "LIMA"
# [16] "LORETO"        "MADRE DE DIOS" "MOQUEGUA"      "PASCO"         "PIURA"
# [21] "PUNO"          "SAN MARTIN"    "TACNA"         "TUMBES"        "UCAYALI"
## Check data of cases
names(caso_covid)
colnames(caso_covid)[1] <- "CE4_ID"
colnames(caso_covid)[7] <- "NAME_1"
unique(caso_covid$NAME_1)
# [1] "LIMA"          "AREQUIPA"      "HUANUCO"       "ICA"           "CUSCO"
# [6] "ANCASH"        "CALLAO"        "LA LIBERTAD"   "LAMBAYEQUE"    "PIURA"
# [11] "LORETO"        "MADRE DE DIOS" "SAN MARTIN"    "JUNIN"         "TUMBES"
# [16] "CAJAMARCA"
# Eliminar NAs
#caso_covid <- caso_covid[caso_covid$NAME_1 != ""]
#caso_covid$NAME_1[caso_covid$Caso_ID %in% c(10,11)] <- "Huanuco"
#caso_covid$NAME_1[caso_covid$NAME_1 == "La libertad"] <- "La Libertad"
casos_region <- data.frame(table(caso_covid$NAME_1))
colnames(casos_region)[1] <- "REGION"
colnames(casos_region)[2] <- "NUMERO_CASOS"
## Checar csv de poblaciones regionales
names(pob_region) # "REGION"    "POBLACION"
pob_region[[1]] <- toupper(pob_region[[1]])
unique(pob_region$REGION) # todo ok
## Merge cases with populations
region_values <- merge(casos_region, pob_region, by="REGION",
all.x=T, all.y=T)
## Calcula incidencias
region_values$NUMERO_CASOS <- as.numeric(region_values$NUMERO_CASOS)
region_values$POBLACION <- as.numeric(as.character(region_values$POBLACION))
region_values$incidencia <- region_values$NUMERO_CASOS/region_values$POBLACION
options(digits = 2)
region_values$incidencerate_100 <-(region_values$incidencia*100000)
## recode the names of the region_values data frame
setnames(region_values, old = "REGION",new = "NAME_1")
levels(region_values$NAME_1)
## Merge data with shapefile
tmp1 <- sh_peru
tmp1_map <- tmp1
tmp1_map@data <- join(sh_peru@data,region_values, by="NAME_1") # shp with data
tmp1_map_df <- tmp1_map@data
tmp1_map@data$NUMERO_CASOS[is.na(tmp1_map@data$NUMERO_CASOS)]<-0 #
# tmp1_map@data$brks <- cut(tmp1_map@data$Casos,
#                           breaks=c(-0.1, 0.9, 1.9, 5, 10, 20, 30, 35),
#                           labels=c("0", "1", "2 - 5", "6 - 10",
#                                    "11 - 20", "21 - 30", "> 30"))
names(tmp1_map@data) # check variables
tmp1_map_df <- tmp1_map@data
# Create the map qtm
col <- c("ivory2", "lightcyan1", "lightblue2", #"lightskyblue",
"royalblue", "blue2", "navyblue", "black")
# try snow2 too
# interactive view
tmap_mode("view")
# crear mapa
qtm <- qtm(tmp1_map, fill = "incidencerate_100",
fill.palette = col,
fill.title="Incidencia por \n100,000 Hab") +
# tm_text("NAME_3", size="0.008", scale=1, root=4,
#         size.lowerbound = .1, bg.color="white", bg.alpha = .15,
#         legend.size.show = FALSE) +
tm_text("NAME_1",size = 0.45)+
tm_layout(paste("Casos por Departamento COVID19 "),
legend.title.size = 0.8,
legend.text.size = .6, legend.bg.color = "white",
legend.position = c("left","bottom")) #+
#tm_view(set.view = c(lon = 15, lat = 48, zoom = 10))
# tm_view(set.view = c(zoom = 10))
print(qtm)
tmap_save(qtm,
paste("outputs_covid19/20200327_Dep_COVID19_Incidencerate_v2",".png", sep=""),
width=2300, height=1380)
# Loop para plotear por dia
unique(caso_covid$FECHA)
# eliminar fechas ""
# caso_covid <- caso_covid[caso_covid$Fecha != "", ]
# crear vector
date.i <- unique(sort(caso_covid$FECHA))
date.i
date.i <- "2020-03-06"
print(i)
i <- "2020-03-06"
print(i)
fecha.i <- caso_covid[caso_covid$FECHA == i,]
casos_region <- data.frame(table(fecha.i$NAME_1))
View(casos_region)
colnames(casos_region)[1] <- "REGION"
colnames(casos_region)[2] <- "NUMERO_CASOS"
View(casos_region)
region_values <- merge(casos_region, pob_region,
by="REGION",
all.x=T, all.y=T)
View(region_values)
region_values$NUMERO_CASOS[is.na(region_values$NUMERO_CASOS)] <- 0
View(region_values)
region_values$NUMERO_CASOS <- as.numeric(region_values$NUMERO_CASOS)
region_values$POBLACION <- as.numeric(as.character(region_values$POBLACION))
region_values$incidencia <- region_values$NUMERO_CASOS/region_values$POBLACION
options(digits = 2)
region_values$incidencerate_100<-(region_values$incidencia*100000)
## recode the names of the region_values data frame
setnames(region_values, old = "REGION",new = "NAME_1")
levels(region_values$NAME_1)
## Merge data with shapefile
tmp1 <- sh_peru
tmp1_map <- tmp1
tmp1_map@data <- join(sh_peru@data,region_values, by="NAME_1") # shp with data
tmp1_map_df <- tmp1_map@data
tmp1_map@data$NUMERO_CASOS[is.na(tmp1_map@data$NUMERO_CASOS)]<-0 # check if this is true
names(tmp1_map@data) # check variables
tmp1_map_df <- tmp1_map@data
# Create the map qtm
col <- c("ivory2", "lightcyan1", "lightblue2", #"lightskyblue",
"royalblue", "blue2", "navyblue", "black")
qtm <- qtm(tmp1_map, fill = "incidencerate_100",
fill.palette = col,
fill.title="Incidencia por \n100,000 Hab") +
tm_text("NAME_1",size = 0.45) +
tm_layout(paste("Casos por Departamento COVID19 ", i),
legend.title.size = .8,
legend.text.size = .6, legend.bg.color = "white",
legend.position = c("left","bottom")) #+
# legend.postion is used for plot mode.
# Use view.legend.position in tm_view to set the legend position in view mode.
print(qtm)
date.i <- unique(sort(caso_covid$FECHA))
# crear una fecha para titulo
#caso_covid$Fecha_titulo <- format(as.Date(caso_covid$Fecha,
#                                   format = "%d/%m/%Y"), "%d-%m-%Y")
pdf("outputs_covid19/20200327_Dep_Incidencerate_31mar20.pdf", onefile = TRUE)
for(i in date.i){
print(i)
fecha.i <- caso_covid[caso_covid$FECHA == i,]
casos_region <- data.frame(table(fecha.i$NAME_1))
colnames(casos_region)[1] <- "REGION"
colnames(casos_region)[2] <- "NUMERO_CASOS"
## Merge cases with populations
region_values <- merge(casos_region, pob_region,
by="REGION",
all.x=T, all.y=T)
# NAs en numero de casos son 0s
region_values$NUMERO_CASOS[is.na(region_values$NUMERO_CASOS)] <- 0
## Calcula incidencias
region_values$NUMERO_CASOS <- as.numeric(region_values$NUMERO_CASOS)
region_values$POBLACION <- as.numeric(as.character(region_values$POBLACION))
region_values$incidencia <- region_values$NUMERO_CASOS/region_values$POBLACION
options(digits = 2)
region_values$incidencerate_100<-(region_values$incidencia*100000)
## recode the names of the region_values data frame
setnames(region_values, old = "REGION",new = "NAME_1")
levels(region_values$NAME_1)
## Merge data with shapefile
tmp1 <- sh_peru
tmp1_map <- tmp1
tmp1_map@data <- join(sh_peru@data,region_values, by="NAME_1") # shp with data
tmp1_map_df <- tmp1_map@data
tmp1_map@data$NUMERO_CASOS[is.na(tmp1_map@data$NUMERO_CASOS)]<-0 # check if this is true
names(tmp1_map@data) # check variables
tmp1_map_df <- tmp1_map@data
# Create the map qtm
col <- c("ivory2", "lightcyan1", "lightblue2", #"lightskyblue",
"royalblue", "blue2", "navyblue", "black")
# interactive view
# tmap_mode("view")
# crear mapa
qtm <- qtm(tmp1_map, fill = "incidencerate_100",
fill.palette = col,
fill.title="Incidencia por \n100,000 Hab") +
tm_text("NAME_1",size = 0.45) +
tm_layout(paste("Casos por Departamento COVID19 ", i),
legend.title.size = .8,
legend.text.size = .6, legend.bg.color = "white",
legend.position = c("left","bottom")) #+
# legend.postion is used for plot mode.
# Use view.legend.position in tm_view to set the legend position in view mode.
print(qtm)
# tmap_save(qtm,
#           paste("outputs_covid19/20200327_Dep_Incidencerate_v2_",
#                 fecha.i$Fecha_titulo, ".png", sep=""),
#           width=2000, height=1380)
}
dev.off()
getwd()
dev.off()
print(qtm)
i
pdf("outputs_covid19/20200327_Dep_Incidencerate_31mar20.pdf", onefile = TRUE)
print(i)
fecha.i <- caso_covid[caso_covid$FECHA == i,]
casos_region <- data.frame(table(fecha.i$NAME_1))
colnames(casos_region)[1] <- "REGION"
colnames(casos_region)[2] <- "NUMERO_CASOS"
## Merge cases with populations
region_values <- merge(casos_region, pob_region,
by="REGION",
all.x=T, all.y=T)
# NAs en numero de casos son 0s
region_values$NUMERO_CASOS[is.na(region_values$NUMERO_CASOS)] <- 0
## Calcula incidencias
region_values$NUMERO_CASOS <- as.numeric(region_values$NUMERO_CASOS)
region_values$POBLACION <- as.numeric(as.character(region_values$POBLACION))
region_values$incidencia <- region_values$NUMERO_CASOS/region_values$POBLACION
options(digits = 2)
region_values$incidencerate_100<-(region_values$incidencia*100000)
## recode the names of the region_values data frame
setnames(region_values, old = "REGION",new = "NAME_1")
levels(region_values$NAME_1)
## Merge data with shapefile
tmp1 <- sh_peru
tmp1_map <- tmp1
tmp1_map@data <- join(sh_peru@data,region_values, by="NAME_1") # shp with data
tmp1_map_df <- tmp1_map@data
tmp1_map@data$NUMERO_CASOS[is.na(tmp1_map@data$NUMERO_CASOS)]<-0 # check if this is true
names(tmp1_map@data) # check variables
tmp1_map_df <- tmp1_map@data
# Create the map qtm
col <- c("ivory2", "lightcyan1", "lightblue2", #"lightskyblue",
"royalblue", "blue2", "navyblue", "black")
# interactive view
# tmap_mode("view")
# crear mapa
qtm <- qtm(tmp1_map, fill = "incidencerate_100",
fill.palette = col,
fill.title="Incidencia por \n100,000 Hab") +
tm_text("NAME_1",size = 0.45) +
tm_layout(paste("Casos por Departamento COVID19 ", i),
legend.title.size = .8,
legend.text.size = .6, legend.bg.color = "white",
legend.position = c("left","bottom")) #+
# legend.postion is used for plot mode.
# Use view.legend.position in tm_view to set the legend position in view mode.
print(qtm)
dev.off()
pdf("outputs_covid19/20200327_Dep_Incidencerate_31mar20.pdf", onefile = TRUE)
for(i in date.i){
print(i)
fecha.i <- caso_covid[caso_covid$FECHA == i,]
casos_region <- data.frame(table(fecha.i$NAME_1))
colnames(casos_region)[1] <- "REGION"
colnames(casos_region)[2] <- "NUMERO_CASOS"
## Merge cases with populations
region_values <- merge(casos_region, pob_region,
by="REGION",
all.x=T, all.y=T)
# NAs en numero de casos son 0s
region_values$NUMERO_CASOS[is.na(region_values$NUMERO_CASOS)] <- 0
## Calcula incidencias
region_values$NUMERO_CASOS <- as.numeric(region_values$NUMERO_CASOS)
region_values$POBLACION <- as.numeric(as.character(region_values$POBLACION))
region_values$incidencia <- region_values$NUMERO_CASOS/region_values$POBLACION
options(digits = 2)
region_values$incidencerate_100<-(region_values$incidencia*100000)
## recode the names of the region_values data frame
setnames(region_values, old = "REGION",new = "NAME_1")
levels(region_values$NAME_1)
## Merge data with shapefile
tmp1 <- sh_peru
tmp1_map <- tmp1
tmp1_map@data <- join(sh_peru@data,region_values, by="NAME_1") # shp with data
tmp1_map_df <- tmp1_map@data
tmp1_map@data$NUMERO_CASOS[is.na(tmp1_map@data$NUMERO_CASOS)]<-0 # check if this is true
names(tmp1_map@data) # check variables
tmp1_map_df <- tmp1_map@data
# Create the map qtm
col <- c("ivory2", "lightcyan1", "lightblue2", #"lightskyblue",
"royalblue", "blue2", "navyblue", "black")
# interactive view
# tmap_mode("view")
# crear mapa
qtm <- qtm(tmp1_map, fill = "incidencerate_100",
fill.palette = col,
fill.title="Incidencia por \n100,000 Hab") +
tm_text("NAME_1",size = 0.45) +
tm_layout(paste("Casos por Departamento COVID19 ", i),
legend.title.size = .8,
legend.text.size = .6, legend.bg.color = "white",
legend.position = c("left","bottom")) #+
# legend.postion is used for plot mode.
# Use view.legend.position in tm_view to set the legend position in view mode.
print(qtm)
tmap_save(qtm,
paste("outputs_covid19/20200327_Dep_Incidencerate_v2_",
fecha.i$Fecha_titulo, ".png", sep=""),
width=2000, height=1380)
}
dev.off()
## Call data
# covid_ind <- fread("~/ce4-peru.github.io/data/crudas/covidPE_IND_20200326_MD.csv")
# covid_ind <- fread("~/ce4-peru.github.io/data/crudas/covidPE_IND_20200327_MD.csv")
covid_ind <- fread("~/ce4-peru.github.io/data/crudas/covidPE_IND_20200331_MD.csv")
## Checar base
str(covid_ind) # 479 obs. of  20 variables
names(covid_ind)
head(covid_ind)
# Transform to character
covid_ind <- mutate_if(covid_ind, is.character, toupper)
sapply(covid_ind, class)
### variableby variable
### Caso_ID ###
table(covid_ind$CASO_ID)
View(covid_ind)
### Fecha ####
table(covid_ind$FECHA)
#### separando caracteres en varias columnas ######
covid_ind$FECHA2 <- covid_ind$FECHA
covid_ind <- separate(covid_ind,
col = "FECHA2",
into = c("DIA", "MES","ANO"),
sep = "/")
##### fecha to as.date format ####
covid_ind<-covid_ind %>%
mutate(FECHA = as.Date(as.character(FECHA), format = "%d/%m/%y"))
### ordenar base ###
names(covid_ind)
covid_ind <- covid_ind[,c(1, 2, 21:23, 3:20)]
# ID del caso
str(covid_ind$CASO_ID) # int
unique(covid_ind$CASO_ID)
View(covid_ind)
## Fecha
str(covid_ind$FECHA) # date
unique(covid_ind$FECHA)
## Region
str(covid_ind$REGION) # character
# Cambiar nombre de variable en googlesheet
unique(covid_ind$REGION)
# Cambiar Huanuco
levels(covid_ind$REGION) <- c(levels(covid_ind$REGION),
c("APURIMAC", "HUANUCO",
"JUNIN", "SAN MARTIN"))
covid_ind$REGION[covid_ind$REGION == "HUÃ¡NUCO"] <- "HUANUCO"
unique(covid_ind$REGION)
## Provincia
str(covid_ind$PROVINCIA) # chr
unique(covid_ind$PROVINCIA)
levels(covid_ind$PROVINCIA) <- c(levels(covid_ind$PROVINCIA),
c("APURIMAC", "HUANUCO",
"JUNIN", "SAN MARTIN", "FERRENAAFE"))
covid_ind$PROVINCIA[covid_ind$PROVINCIA == "FERREÃ±AFE"] <- "FERRENAFE"
covid_ind$PROVINCIA[covid_ind$PROVINCIA == ""] <- NA
unique(covid_ind$PROVINCIA)
## Distrito
str(covid_ind$DISTRITO) # chr
unique(covid_ind$DISTRITO)
# Hay  ""
covid_ind$DISTRITO[covid_ind$DISTRITO == ""] <- NA
unique(covid_ind$DISTRITO)
## Direccion
str(covid_ind$DIRECCION) # logi
unique(covid_ind$DIRECCION) # NA
## Edad
str(covid_ind$EDAD_A) # chr
covid_ind$EDAD_A_n <- as.numeric(covid_ind$EDAD_A)
str(covid_ind$EDAD_A_n)# ok
table(covid_ind$EDAD_A_n) # ok, from 2 to 96.
covid_ind$EDAD_A[covid_ind$EDAD_A == ""] <- NA
## Sexo
str(covid_ind$SEXOM1H0) # int
table(covid_ind$SEXOM1H0) # 0 and 1
## Hospitalizado
str(covid_ind$HOSPITALIZADOS1N0) # int
table(covid_ind$HOSPITALIZADOS1N0) # 0 and 1
## AisladoDomicil
str(covid_ind$AISLADODOMICILS1N0) # int
table(covid_ind$AISLADODOMICILS1N0) # 0 and 1
## cONTACTO
str(covid_ind$CONTACTO) # CHR
## cONTACTO
str(covid_ind$CONTACTO) # CHR
unique(covid_ind$CONTACTO)
# Dividir en 3 o 4 columnas esta inforamci[on como se indic[o en el googlesheet.
covid_ind$CONTACTO[covid_ind$CONTACTO == ""] <- NA
## IMPORTADO
str(covid_ind$IMPORTADO) # int
unique(covid_ind$IMPORTADO)
# [1] "1"    "0"    ""     "LINK"
# Hay NA
covid_ind$CONTACTO[covid_ind$CONTACTO == "LINK"] <- NA
covid_ind$CONTACTO[covid_ind$CONTACTO == ""] <- NA
## ORIGEN_INTERNACIONAL
str(covid_ind$ORIGEN_INTERNACIONAL) # chr
unique(covid_ind$ORIGEN_INTERNACIONAL)
# [1] "EUROPA"        ""              "UK"            "ESPANA"        "ITALIA"
# [6] "WASHINGTON DC" "EEUU"
# Hay ""
covid_ind$ORIGEN_INTERNACIONAL[covid_ind$ORIGEN_INTERNACIONAL == ""] <- NA
unique(covid_ind$ORIGEN_INTERNACIONAL)
covid_ind$ORIGEN_INTERNACIONAL[covid_ind$ORIGEN_INTERNACIONAL == "LINK 2"] <- NA
## CASO_CONTACTO
str(covid_ind$CASO_CONTACTO) # int
unique(covid_ind$CASO_CONTACTO)
## RELACION_CONTACTO
str(covid_ind$RELACION_CONTACTO) # chr
unique(covid_ind$RELACION_CONTACTO)
# [1] NA     "FAMILIAR"    "AMIGO"       ""    "TURISTA"     "RELACIONADO"
# Hay ""
covid_ind$RELACION_CONTACTO[covid_ind$RELACION_CONTACTO == ""] <- NA
## ORIGEN_NACIONAL
str(covid_ind$ORIGEN_NACIONAL) # chr
unique(covid_ind$ORIGEN_NACIONAL)
# [1] "LIMA"           "AREQUIPA"       "HUANUCO"        "CHINCHA"
# [5] ""               "CUSCO"          "NUEVO CHIMBOTE" "HUANCHACO"
# [9] "LA VICTORIA"    "PIURA"          "CHICLAYO"       "IQUITOS"
# [13] "TRUJILLO"
# Hay ""
covid_ind$ORIGEN_NACIONAL[covid_ind$ORIGEN_NACIONAL == ""] <- NA
## Double check "" and count NAs
unique(covid_ind$CASO_ID)
sum(is.na(covid_ind$CASO_ID)) # 445 NAs
unique(covid_ind$FECHA)
sum(is.na(covid_ind$FECHA)) # 0 NAs
unique(covid_ind$DIA)
sum(is.na(covid_ind$DIA)) # 0 NAs
unique(covid_ind$MES)
sum(is.na(covid_ind$MES)) # 0 NAs
unique(covid_ind$ANO)
sum(is.na(covid_ind$ANO)) # 0 NAs
unique(covid_ind$REGION)
sum(is.na(covid_ind$REGION)) # 0 NAs
unique(covid_ind$PROVINCIA)
sum(is.na(covid_ind$PROVINCIA)) # 344 NAs
unique(covid_ind$DISTRITO)
sum(is.na(covid_ind$DISTRITO)) # 386 NAs
unique(covid_ind$DIRECCION)
sum(is.na(covid_ind$DIRECCION)) # 479 NAs
unique(covid_ind$EDAD_A_n)
sum(is.na(covid_ind$EDAD_A_n)) # 402 NAs
unique(covid_ind$SEXOM1H0)
sum(is.na(covid_ind$SEXOM1H0)) # 383 NAs
unique(covid_ind$HOSPITALIZADOS1N0)
sum(is.na(covid_ind$HOSPITALIZADOS1N0)) # 390 NAs
unique(covid_ind$AISLADODOMICILS1N0)
sum(is.na(covid_ind$AISLADODOMICILS1N0)) # 391 NAs
unique(covid_ind$CONTACTO)
sum(is.na(covid_ind$CONTACTO)) # 399 NAs
unique(covid_ind$IMPORTADO)
sum(is.na(covid_ind$IMPORTADO)) # 444 NAs
# [1] "1"    "0"    ""     "LINK"
covid_ind$IMPORTADO[covid_ind$IMPORTADO == "LINK"] <- NA
covid_ind$IMPORTADO[covid_ind$IMPORTADO == ""] <- NA
unique(covid_ind$CONTACTO)
sum(is.na(covid_ind$CONTACTO)) # 746 NAs
unique(covid_ind$IMPORTADO)
sum(is.na(covid_ind$IMPORTADO)) # 444 NAs
unique(covid_ind$RELACION_CONTACTO)
sum(is.na(covid_ind$RELACION_CONTACTO)) # 461 NAs
unique(covid_ind$CASO_CONTACTO)
sum(is.na(covid_ind$CASO_CONTACTO)) # 461 NAs
unique(covid_ind$ORIGEN_INTERNACIONAL)
sum(is.na(covid_ind$ORIGEN_INTERNACIONAL)) # 462 NAs
unique(covid_ind$ORIGEN_NACIONAL)
sum(is.na(covid_ind$ORIGEN_NACIONAL)) # 444 NAs
# Save dataset
names(covid_ind)
covid_ind <- covid_ind[,c(1:10,24,11:23)]
names(covid_ind)
write.csv(covid_ind, "data/modificadas/covidPE_IND_20200327_MD_clean.csv")
# Save csv.
# CHANGE NAME! DONT FORGET!
write.csv(covid_ind, "data/modificadas/covidPE_IND_20200331_MD_clean.csv")
###### incidencia de Peru casos COVID19#####
library(ggplot2)
library(ggmap)
library(data.table)
library(maptools)
library(rgeos)
library(Cairo)
library(scales)
library(RColorBrewer)
library(rgdal)
library(sp)
library(plyr)
library(tmap)
library(dplyr)
setwd("~/ce4-peru.github.io/")
## Call data
# shapefile de peru por regiones
shpfile_peru <- "data/gadm0-1-2-3/peru_1.shp"
sh_peru <- rgdal::readOGR(shpfile_peru)
# casos de covid
caso_covid <- fread("~/ce4-peru.github.io/data/modificadas/covidPE_IND_20200331_MD_clean.csv")
