addPolygons(fillColor = pal.cases(log(dep$pos)),
weight = 2,
opacity = 1,
color = "white",
dashArray = "",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels.total,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend("bottomleft", pal = pal.cases, values = log(dep$pos), title= 'Casos', labFormat = labelFormat(transform = function(x) round(exp(x))))
labels.new <- sprintf(
"<strong>%s</strong><br/<strong>Casos: </strong>%s",
dep$dep, dep$pos.new) %>% lapply(htmltools::HTML)
pal.newcases <- colorNumeric( palette="YlOrRd", domain = log(dep$pos.new), na.color="transparent")
leaflet(dep) %>%
addTiles(urlTemplate = 'http://a.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png') %>%
addPolygons(fillColor = pal.newcases(log(dep$pos.new)),
weight = 2,
opacity = 1,
color = "white",
dashArray = "",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels.new,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend("bottomleft", pal=pal.newcases, values = log(dep$pos.new), title= ' Log de casos', labFormat = labelFormat(transform = function(x) round(exp(x))))
labels.pasnew <- sprintf(
"<strong>%s</strong><br/<strong>Fallecidos: </strong>%s",
dep$dep, dep$pas.new) %>% lapply(htmltools::HTML)
pal.pas <- colorNumeric( palette="YlOrRd", domain = dep$pas.new, na.color="transparent")
leaflet(dep) %>%
addTiles(urlTemplate = 'http://a.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png') %>%
addPolygons(fillColor = pal.pasnew(dep$pas.new),
weight = 2,
opacity = 1,
color = "white",
dashArray = "",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels.pas,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend("bottomleft", pal=pal.pasnew, values = dep$pas.new, title= 'Fallecidos')
labels.pasnew <- sprintf(
"<strong>%s</strong><br/<strong>Fallecidos: </strong>%s",
dep$dep, dep$pas.new) %>% lapply(htmltools::HTML)
pal.pasnew <- colorNumeric( palette="YlOrRd", domain = dep$pas.new, na.color="transparent")
leaflet(dep) %>%
addTiles(urlTemplate = 'http://a.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png') %>%
addPolygons(fillColor = pal.pasnew(dep$pas.new),
weight = 2,
opacity = 1,
color = "white",
dashArray = "",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels.pasnew,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend("bottomleft", pal=pal.pasnew, values = dep$pas.new, title= 'Fallecidos')
labels.ratio <- sprintf(
"<strong>%s</strong><br/<strong>%: </strong>%s",
dep$dep, dep$ratio.new) %>% lapply(htmltools::HTML)
labels.ratio <- sprintf(
"<strong>%s</strong><br/<strong>`%`: </strong>%s",
dep$dep, dep$ratio.new) %>% lapply(htmltools::HTML)
labels.ratio <- sprintf(
"<strong>%s</strong><br/<strong>'%': </strong>%s",
dep$dep, dep$ratio.new) %>% lapply(htmltools::HTML)
labels.ratio <- sprintf(
"<strong>%s</strong><br/<strong>Porcentaje: </strong>%s",
dep$dep, dep$ratio.new) %>% lapply(htmltools::HTML)
pal.ratio <-  colorNumeric( palette="Blues", domain = dep$ratio.new*100, na.color="transparent")
leaflet(dep) %>%
addTiles(urlTemplate = 'http://a.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png') %>%
addPolygons(fillColor = pal.ratio(dep$ratio.new*100),
weight = 2,
opacity = 1,
color = "white",
dashArray = "",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels.ratio,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend("bottomleft", pal=pal.ratio, values = dep$ratio.new*100, title= '% Positivos')
labels.ratio <- sprintf(
"<strong>%s</strong><br/<strong>Porcentaje: </strong>%s",
dep$dep, dep$ratio.new*100) %>% lapply(htmltools::HTML)
pal.ratio <-  colorNumeric( palette="Blues", domain = dep$ratio.new*100, na.color="transparent")
leaflet(dep) %>%
addTiles(urlTemplate = 'http://a.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png') %>%
addPolygons(fillColor = pal.ratio(dep$ratio.new*100),
weight = 2,
opacity = 1,
color = "white",
dashArray = "",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels.ratio,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend("bottomleft", pal=pal.ratio, values = dep$ratio.new*100, title= '% Positivos')
c.date <- max(deps$Fecha)
dep <-
deps %>%
dplyr::select(dat = Fecha,
dep = REGION,
pos = Positivos_totales,
pos.imp = PositivosImputados_totales,
pas =Fallecidos,
smp =Total_muestras) %>%
dplyr::mutate(pas = pas %>% if_else(is.na(.), 0, .)) %>%
group_by(dep) %>%
dplyr::mutate(pos.lag = lag(pos, n = 1),
pos.imp.lag = lag(pos.imp, n = 1),
pas.lag = lag(pas, n = 1),
smp.lag = lag(smp, n = 1)) %>%
dplyr::filter(dat == c.date) %>%
dplyr::mutate(pos.new = abs(pos - pos.lag),
pos.imp.new = abs(pos.imp - pos.imp.lag),
pas.new = abs(pas - pas.lag),
smp.new = abs(smp - smp.lag),
ratio.new = signif(pos.new/smp.new), digits = 3)
## Regions geometry
shp <- st_read("Limite_departamental", stringsAsFactors = F)
shp <- shp %>%
st_transform(4326) %>%
select(Departamento = NOMBDEP)
# Append
dep <- merge(dep, shp, by.y = 'Departamento', by.x = 'dep', all.x = T)
dep <- st_as_sf(dep, sf_column_name = 'geometry')
dep <- merge(dep, pop %>% select(dep = REGION, pop))
dep <- dep %>% mutate(pos.hab = pos/pop)
labels.pos.hab <- sprintf(
"<strong>%s</strong><br/<strong>Casos: </strong>%s",
dep$dep, dep$pos.hab) %>% lapply(htmltools::HTML)
pal.pos.hab <- colorNumeric( palette="YlOrRd", domain = log(dep$pos.hab), na.color="transparent")
leaflet(dep) %>%
addTiles(urlTemplate = 'http://a.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png') %>%
addPolygons(fillColor = pal.pos.hab(log(dep$pos.hab)),
weight = 2,
opacity = 1,
color = "white",
dashArray = "",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels.pos.hab,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend("bottomleft", pal = pal.pos.hab, values = log(dep$pos.hab), title= 'Casos', labFormat = labelFormat(transform = function(x) round(exp(x))))
c.date <- max(deps$Fecha)
dep <-
deps %>%
dplyr::select(dat = Fecha,
dep = REGION,
pos = Positivos_totales,
pos.imp = PositivosImputados_totales,
pas =Fallecidos,
smp =Total_muestras) %>%
dplyr::mutate(pas = pas %>% if_else(is.na(.), 0, .)) %>%
group_by(dep) %>%
dplyr::mutate(pos.lag = lag(pos, n = 1),
pos.imp.lag = lag(pos.imp, n = 1),
pas.lag = lag(pas, n = 1),
smp.lag = lag(smp, n = 1)) %>%
dplyr::filter(dat == c.date) %>%
dplyr::mutate(pos.new = abs(pos - pos.lag),
pos.imp.new = abs(pos.imp - pos.imp.lag),
pas.new = abs(pas - pas.lag),
smp.new = abs(smp - smp.lag),
ratio.new = signif(pos.new/smp.new), digits = 3)
## Regions geometry
shp <- st_read("Limite_departamental", stringsAsFactors = F)
shp <- shp %>%
st_transform(4326) %>%
select(Departamento = NOMBDEP)
# Append
dep <- merge(dep, shp, by.y = 'Departamento', by.x = 'dep', all.x = T)
dep <- st_as_sf(dep, sf_column_name = 'geometry')
dep <- merge(dep, pop %>% select(dep = REGION, pop))
dep <- dep %>% mutate(pos.hab = pos/pop*100000)
labels.pos.hab <- sprintf(
"<strong>%s</strong><br/<strong>Casos: </strong>%s",
dep$dep, dep$pos.hab) %>% lapply(htmltools::HTML)
pal.pos.hab <- colorNumeric( palette="YlOrRd", domain = log(dep$pos.hab), na.color="transparent")
leaflet(dep) %>%
addTiles(urlTemplate = 'http://a.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png') %>%
addPolygons(fillColor = pal.pos.hab(log(dep$pos.hab)),
weight = 2,
opacity = 1,
color = "white",
dashArray = "",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels.pos.hab,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend("bottomleft", pal = pal.pos.hab, values = log(dep$pos.hab), title= 'Casos', labFormat = labelFormat(transform = function(x) round(exp(x))))
labels.pos.hab <- sprintf(
"<strong>%s</strong><br/<strong>Casos por 100k hab: </strong>%s",
dep$dep, dep$pos.hab) %>% lapply(htmltools::HTML)
pal.pos.hab <- colorNumeric( palette="YlOrRd", domain = log(dep$pos.hab), na.color="transparent")
leaflet(dep) %>%
addTiles(urlTemplate = 'http://a.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png') %>%
addPolygons(fillColor = pal.pos.hab(log(dep$pos.hab)),
weight = 2,
opacity = 1,
color = "white",
dashArray = "",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels.pos.hab,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend("bottomleft", pal = pal.pos.hab, values = log(dep$pos.hab), title= 'Casos', labFormat = labelFormat(transform = function(x) round(exp(x))))
labels.pos.hab <- sprintf(
"<strong>%s</strong><br/<strong>Casos por 100k hab: </strong>%s",
dep$dep, round(dep$pos.hab)) %>% lapply(htmltools::HTML)
pal.pos.hab <- colorNumeric( palette="YlOrRd", domain = log(dep$pos.hab), na.color="transparent")
leaflet(dep) %>%
addTiles(urlTemplate = 'http://a.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png') %>%
addPolygons(fillColor = pal.pos.hab(log(dep$pos.hab)),
weight = 2,
opacity = 1,
color = "white",
dashArray = "",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels.pos.hab,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend("bottomleft", pal = pal.pos.hab, values = log(dep$pos.hab), title= 'Casos', labFormat = labelFormat(transform = function(x) round(exp(x))))
labels.pos.hab <- sprintf(
"<strong>%s</strong><br/<strong>Casos/100k hab: </strong>%s",
dep$dep, round(dep$pos.hab)) %>% lapply(htmltools::HTML)
pal.pos.hab <- colorNumeric( palette="YlOrRd", domain = log(dep$pos.hab), na.color="transparent")
leaflet(dep) %>%
addTiles(urlTemplate = 'http://a.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png') %>%
addPolygons(fillColor = pal.pos.hab(log(dep$pos.hab)),
weight = 2,
opacity = 1,
color = "white",
dashArray = "",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels.pos.hab,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend("bottomleft", pal = pal.pos.hab, values = log(dep$pos.hab), title= 'Casos', labFormat = labelFormat(transform = function(x) round(exp(x))))
c.date <- max(deps$Fecha)
dep <-
deps %>%
dplyr::select(dat = Fecha,
dep = REGION,
pos = Positivos_totales,
pos.imp = PositivosImputados_totales,
pas =Fallecidos,
smp =Total_muestras) %>%
dplyr::mutate(pas = pas %>% if_else(is.na(.), 0, .)) %>%
group_by(dep) %>%
dplyr::mutate(pos.lag = lag(pos, n = 1),
pos.imp.lag = lag(pos.imp, n = 1),
pas.lag = lag(pas, n = 1),
smp.lag = lag(smp, n = 1)) %>%
dplyr::filter(dat == c.date) %>%
dplyr::mutate(pos.new = abs(pos - pos.lag),
pos.imp.new = abs(pos.imp - pos.imp.lag),
pas.new = abs(pas - pas.lag),
smp.new = abs(smp - smp.lag),
ratio.new = signif(pos.new/smp.new), digits = 3)
## Regions geometry
shp <- st_read("Limite_departamental", stringsAsFactors = F)
shp <- shp %>%
st_transform(4326) %>%
select(Departamento = NOMBDEP)
# Append
dep <- merge(dep, shp, by.y = 'Departamento', by.x = 'dep', all.x = T)
dep <- st_as_sf(dep, sf_column_name = 'geometry')
dep <- merge(dep, pop %>% select(dep = REGION, pop))
dep <- dep %>% mutate(pos.hab = pos/pop*100000,
smp.hab = smp/pop*100000)
labels.smp.hab <- sprintf(
"<strong>%s</strong><br/<strong>Pruebas/100k hab: </strong>%s",
dep$dep, dep$smp.hab) %>% lapply(htmltools::HTML)
pal.smp.hab <- colorNumeric( palette="Blues", domain = log(dep$smp.hab), na.color="transparent")
leaflet(dep) %>%
addTiles(urlTemplate = 'http://a.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png') %>%
addPolygons(fillColor = pal.smp.hab(log(dep$smp.hab)),
weight = 2,
opacity = 1,
color = "white",
dashArray = "",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels.smp.hab,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend("bottomleft", pal=pal.smp.hab, values = log(dep$smp.hab), title= 'Pruebas', labFormat = labelFormat(transform = function(x) round(exp(x))))
labels.smp.hab <- sprintf(
"<strong>%s</strong><br/<strong>Pruebas/100k hab: </strong>%s",
dep$dep, round(dep$smp.hab)) %>% lapply(htmltools::HTML)
pal.smp.hab <- colorNumeric( palette="Blues", domain = log(dep$smp.hab), na.color="transparent")
leaflet(dep) %>%
addTiles(urlTemplate = 'http://a.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png') %>%
addPolygons(fillColor = pal.smp.hab(log(dep$smp.hab)),
weight = 2,
opacity = 1,
color = "white",
dashArray = "",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels.smp.hab,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend("bottomleft", pal=pal.smp.hab, values = log(dep$smp.hab), title= 'Pruebas', labFormat = labelFormat(transform = function(x) round(exp(x))))
font_import()
loadfonts(device = "win")
# dep %>%
#   st_set_geometry(NULL) %>%
#   select(dep, pos) %>%
#   mutate(pos = as.integer(round((pos/sum(pos))*100))) %>%
#   waffle(rows = 5, title = "Your basic waffle chart")
#library(extrafont)
#library(emojifont)
#library(sysfonts)
#"C:/Users/Jorge Ruiz/Desktop/fontawesome-webfont.ttf"
#"C:/Windows/Fonts/fontawesome-webfont.ttf"
#font_add("FontAwesome", regular = "C:/Users/Jorge Ruiz/Desktop/fontawesome-webfont.ttf")
#font_import("C:/Windows/Fonts/fontawesome-webfont.ttf")
#load.fontawesome(font = "C:/Users/Jorge Ruiz/Desktop/fontawesome-webfont.ttf")
#load.fontawesome(font = "fontawesome-webfont.otf")
#install.packages('extrafont')
library(extrafont)
library(waffle)
loadfonts(device = "win")
waffle(c(50,20), rows = 5, title = "Your basic waffle chart",
use_glyph = "male",glyph_size=10)
install.packages('emojifont')
install.packages('sysfonts')
font_add("FontAwesome", regular = "C:/Users/edgar/Desktop/fontawesome-webfont.ttf")
library(emojifont)
library(sysfonts)
font_add("FontAwesome", regular = "C:/Users/edgar/Desktop/font-awesome-4.7.0/fonts/fontawesome-webfont.ttf")
font_import("C:/Windows/Fonts/fontawesome-webfont.ttf")
font_import("C:/Windows/Fonts/fontawesome-webfont.ttf")
# dep %>%
#   st_set_geometry(NULL) %>%
#   select(dep, pos) %>%
#   mutate(pos = as.integer(round((pos/sum(pos))*100))) %>%
#   waffle(rows = 5, title = "Your basic waffle chart")
# library(extrafont)
# library(emojifont)
# library(sysfonts)
# "C:/Users/Jorge Ruiz/Desktop/fontawesome-webfont.ttf"
# "C:/Windows/Fonts/fontawesome-webfont.ttf"
# font_add("FontAwesome", regular = "C:/Users/edgar/Desktop/font-awesome-4.7.0/fonts/fontawesome-webfont.ttf")
# font_import("C:/Windows/Fonts/fontawesome-webfont.ttf")
# load.fontawesome(font = "C:/Users/Jorge Ruiz/Desktop/fontawesome-webfont.ttf")
# load.fontawesome(font = "fontawesome-webfont.otf")
#install.packages('extrafont')
library(extrafont)
library(waffle)
loadfonts(device = "win")
waffle(c(50,20), rows = 5, title = "Your basic waffle chart",
use_glyph = "male",glyph_size=10)
load.fontawesome(font = 'C:/Users/edgar/Desktop/font-awesome-4.7.0/fonts/fontawesome-webfont.ttf')
load.fontawesome(font = "fontawesome-webfont.otf")
loadfonts(device = "win")
waffle(c(50,20), rows = 5, title = "Your basic waffle chart",
use_glyph = "male",glyph_size=10)
load.fontawesome(font = "C:/Users/edgar/Desktop/font-awesome-4.7.0/fonts/fontawesome-webfont.otf")
load.fontawesome(font = "C:/Users/edgar/Desktop/font-awesome-4.7.0/fonts/FontAwesome.otf")
loadfonts(device = "win")
waffle(c(50,20), rows = 5, title = "Your basic waffle chart",
use_glyph = "male",glyph_size=10)
font_import("C:/Windows/Fonts/fontawesome-webfont.ttf")
palette_1 <- c("#ffffff",
"#fff3e3",
"#ffe8c8",
"#ffddac",
"#ffd291",
"#ffc775",
"#ffbc59",
"#ffb139",
"#ffa600")
palette_2 <- c("#ffffff",
"#e2e9ec",
"#c6d3da",
"#aabdc8",
"#8ea8b6",
"#7293a4",
"#567f93",
"#386b82",
"#0e5871")
labels.total <- sprintf(
"<strong>%s</strong><br/<strong>Casos: </strong>%s",
dep$dep, dep$pos) %>% lapply(htmltools::HTML)
pal.cases <- colorNumeric( palette="RdPu", domain = log(dep$pos), na.color="transparent")
leaflet(dep) %>%
addTiles(urlTemplate = 'http://a.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png') %>%
addPolygons(fillColor = pal.cases(log(dep$pos)),
weight = 2,
opacity = 1,
color = "white",
dashArray = "",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels.total,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend("bottomleft", pal = pal.cases, values = log(dep$pos), title= 'Casos', labFormat = labelFormat(transform = function(x) round(exp(x))))
