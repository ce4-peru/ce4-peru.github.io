library(tidyverse)
library(XML)
library(httr)
library(RCurl)
library(sf)
library(lubridate)
library(leaflet)
library(colorspace)
library(DT)
library(zoo)
library(slider)
library(plotly)
library(waffle)
library(extrafont)
library(plyr)
library(extrafont)
library(waffle)
options(scipen=999)
nac <- rio::import("https://github.com/jincio/COVID_19_PERU/blob/master/docs/reportes_minsa.xlsx?raw=true")
deps <- rio::import("https://github.com/jincio/COVID_19_PERU/blob/master/docs/reportes_minsa.xlsx?raw=true", sheet = 2)
pop <- read_csv("data/peru_pop_stratum.csv") %>%
group_by(dep_adm1) %>%
dplyr::summarise(pop = sum(N)) %>%
dplyr::mutate(REGION = toupper(dep_adm1))
c.date <- max(deps$Fecha)
y.date <- as.Date(c.date) - 1
dep <-
deps %>%
dplyr::select(dat = Fecha,
dep = REGION,
pos = Positivos_totales,
pos.imp = PositivosImputados_totales,
pas =Fallecidos,
smp =Total_muestras) %>%
dplyr::mutate(pas = pas %>% if_else(is.na(.), 0, .)) %>%
group_by(dep) %>%
dplyr::mutate(pos.lag = lag(pos, n = 1),
pos.imp.lag = lag(pos.imp, n = 1),
pas.lag = lag(pas, n = 1),
smp.lag = lag(smp, n = 1)) %>%
dplyr::filter(dat == c.date) %>%
dplyr::mutate(pos.new = abs(pos - pos.lag),
pos.imp.new = abs(pos.imp - pos.imp.lag),
pas.new = abs(pas - pas.lag),
smp.new = abs(smp - smp.lag),
ratio.new = signif(pos.new/smp.new), digits = 3)
y.dep <-
deps %>%
dplyr::select(dat = Fecha,
dep = REGION,
pos = Positivos_totales,
pos.imp = PositivosImputados_totales,
pas =Fallecidos,
smp =Total_muestras) %>%
dplyr::mutate(pas = pas %>% if_else(is.na(.), 0, .)) %>%
group_by(dep) %>%
dplyr::mutate(pos.lag = lag(pos, n = 1),
pos.imp.lag = lag(pos.imp, n = 1),
pas.lag = lag(pas, n = 1),
smp.lag = lag(smp, n = 1)) %>%
dplyr::filter(dat == y.date) %>%
dplyr::mutate(pos.new = abs(pos - pos.lag),
pos.imp.new = abs(pos.imp - pos.imp.lag),
pas.new = abs(pas - pas.lag),
smp.new = abs(smp - smp.lag),
ratio.new = signif(pos.new/smp.new), digits = 3)
## Regions geometry
shp <- st_read("Limite_departamental", stringsAsFactors = F)
shp <- shp %>%
st_transform(4326) %>%
select(Departamento = NOMBDEP)
# Append
dep <- merge(dep, shp, by.y = 'Departamento', by.x = 'dep', all.x = T)
dep <- st_as_sf(dep, sf_column_name = 'geometry')
dep <- merge(dep, pop %>% select(dep = REGION, pop))
dep <- dep %>% mutate(pos.hab = pos/pop*100000,
smp.hab = smp/pop*100000)
View(dep)
dep <-
deps %>%
dplyr::select(dat = Fecha,
dep = REGION,
pos = Positivos_totales,
pos.imp = PositivosImputados_totales,
pas =Fallecidos,
smp =Total_muestras) %>%
dplyr::mutate(pas = pas %>% if_else(is.na(.), 0, .)) %>%
group_by(dep) %>%
dplyr::mutate(pos.lag = lag(pos, n = 1),
pos.imp.lag = lag(pos.imp, n = 1),
pas.lag = lag(pas, n = 1),
smp.lag = lag(smp, n = 1)) %>%
dplyr::filter(dat == c.date) %>%
dplyr::mutate(pos.new = abs(pos - pos.lag),
pos.imp.new = abs(pos.imp - pos.imp.lag),
pas.new = abs(pas - pas.lag),
smp.new = abs(smp - smp.lag),
ratio.new = signif(pos.new/smp.new), digits = 3) %>%
mutate(if_else(is.na(pos.new)), pos.new = NA, pos.new = pos.new)
View(dep)
dep <-
deps %>%
dplyr::select(dat = Fecha,
dep = REGION,
pos = Positivos_totales,
pos.imp = PositivosImputados_totales,
pas =Fallecidos,
smp =Total_muestras) %>%
dplyr::mutate(pas = pas %>% if_else(is.na(.), 0, .)) %>%
group_by(dep) %>%
dplyr::mutate(pos.lag = lag(pos, n = 1),
pos.imp.lag = lag(pos.imp, n = 1),
pas.lag = lag(pas, n = 1),
smp.lag = lag(smp, n = 1)) %>%
dplyr::filter(dat == c.date) %>%
dplyr::mutate(pos.new = abs(pos - pos.lag),
pos.imp.new = abs(pos.imp - pos.imp.lag),
pas.new = abs(pas - pas.lag),
smp.new = abs(smp - smp.lag),
ratio.new = signif(pos.new/smp.new), digits = 3)
dep[is.na(dep$pos.new), ]$pos.new <- NA
dep[dep$pos.new == 0, ]$pos.new <- NA
View(dep)
library(flexdashboard)
library(rio)
install.packages('curl')
library(flexdashboard)
library(rio)
library(tidyverse)
library(XML)
library(httr)
library(RCurl)
library(sf)
library(lubridate)
library(leaflet)
library(colorspace)
library(DT)
library(zoo)
library(slider)
library(plotly)
library(waffle)
library(extrafont)
library(plyr)
library(extrafont)
library(waffle)
library(RColorBrewer)
library(leaflet.extras)
install.packages(leaflet.extras)
nac <- rio::import("https://github.com/jincio/COVID_19_PERU/blob/master/reportes_minsa.xlsx?raw=true")
deps <- rio::import("https://github.com/jincio/COVID_19_PERU/blob/master/reportes_minsa.xlsx?raw=true", sheet = 2)
pop <- read_csv("data/peru_pop_stratum.csv") %>%
group_by(dep_adm1) %>%
dplyr::summarise(pop = sum(N)) %>%
dplyr::mutate(REGION = toupper(dep_adm1))
Paises_LATAM <- c("Argentina","Bolivia","Brazil","Chile","Colombia","Ecuador","Mexico","Peru","Uruguay","Venezuela")
LATAM <- read_csv ("https://covid.ourworldindata.org/data/owid-covid-data.csv") %>%
dplyr::filter(location %in% Paises_LATAM) %>%
dplyr::mutate( mav_new = slide_dbl(new_cases, ~mean(.x, na.rm = TRUE), .before = 6))
c.date <- max(deps$Fecha)
y.date <- as.Date(c.date) - 1
dep <-
deps %>%
dplyr::select(dat = Fecha,
dep = REGION,
pos = Positivos_totales,
pos.imp = PositivosImputados_totales,
pas =Fallecidos,
smp =Total_muestras) %>%
dplyr::mutate(pas = pas %>% if_else(is.na(.), 0, .)) %>%
group_by(dep) %>%
dplyr::mutate(pos.lag = lag(pos, n = 1),
pos.imp.lag = lag(pos.imp, n = 1),
pas.lag = lag(pas, n = 1),
smp.lag = lag(smp, n = 1)) %>%
dplyr::filter(dat == c.date) %>%
dplyr::mutate(pos.new = abs(pos - pos.lag),
pos.imp.new = abs(pos.imp - pos.imp.lag),
pas.new = abs(pas - pas.lag),
smp.new = abs(smp - smp.lag),
ratio.new = signif(pos.new/smp.new), digits = 3,
pos.new.log = log(pos.new))
dep[dep$pos.new == 0, ]$pos.new <- NA
y.dep <-
deps %>%
dplyr::select(dat = Fecha,
dep = REGION,
pos = Positivos_totales,
pos.imp = PositivosImputados_totales,
pas =Fallecidos,
smp =Total_muestras) %>%
dplyr::mutate(pas = pas %>% if_else(is.na(.), 0, .)) %>%
group_by(dep) %>%
dplyr::mutate(pos.lag = lag(pos, n = 1),
pos.imp.lag = lag(pos.imp, n = 1),
pas.lag = lag(pas, n = 1),
smp.lag = lag(smp, n = 1)) %>%
dplyr::filter(dat == y.date) %>%
dplyr::mutate(pos.new = abs(pos - pos.lag),
pos.imp.new = abs(pos.imp - pos.imp.lag),
pas.new = abs(pas - pas.lag),
smp.new = abs(smp - smp.lag),
ratio.new = signif(pos.new/smp.new), digits = 3)
## Regions geometry
shp <- st_read("Limite_departamental", stringsAsFactors = F)
shp <- shp %>%
st_transform(4326) %>%
select(Departamento = NOMBDEP)
# Append
dep <- merge(dep, shp, by.y = 'Departamento', by.x = 'dep', all.x = T)
dep <- st_as_sf(dep, sf_column_name = 'geometry')
dep <- merge(dep, pop %>% select(dep = REGION, pop))
dep <- dep %>% mutate(pos.hab = pos/pop*100000,
smp.hab = smp/pop*100000)
View(dep)
c.date <- max(deps$Fecha)
y.date <- as.Date(c.date) - 1
dep <-
deps %>%
dplyr::select(dat = Fecha,
dep = REGION,
pos = Positivos_totales,
pos.imp = PositivosImputados_totales,
pas =Fallecidos,
smp =Total_muestras) %>%
dplyr::mutate(pas = pas %>% if_else(is.na(.), 0, .)) %>%
group_by(dep) %>%
dplyr::mutate(pos.lag = lag(pos, n = 1),
pos.imp.lag = lag(pos.imp, n = 1),
pas.lag = lag(pas, n = 1),
smp.lag = lag(smp, n = 1)) %>%
dplyr::filter(dat == c.date) %>%
dplyr::mutate(pos.new = abs(pos - pos.lag),
pos.imp.new = abs(pos.imp - pos.imp.lag),
pas.new = abs(pas - pas.lag),
smp.new = abs(smp - smp.lag),
ratio.new = signif(pos.new/smp.new), digits = 3,
pos.new.log = log(pos.new),
pas.new.log = log(pas.new))
dep[dep$pos.new == 0, ]$pos.new <- NA
y.dep <-
deps %>%
dplyr::select(dat = Fecha,
dep = REGION,
pos = Positivos_totales,
pos.imp = PositivosImputados_totales,
pas =Fallecidos,
smp =Total_muestras) %>%
dplyr::mutate(pas = pas %>% if_else(is.na(.), 0, .)) %>%
group_by(dep) %>%
dplyr::mutate(pos.lag = lag(pos, n = 1),
pos.imp.lag = lag(pos.imp, n = 1),
pas.lag = lag(pas, n = 1),
smp.lag = lag(smp, n = 1)) %>%
dplyr::filter(dat == y.date) %>%
dplyr::mutate(pos.new = abs(pos - pos.lag),
pos.imp.new = abs(pos.imp - pos.imp.lag),
pas.new = abs(pas - pas.lag),
smp.new = abs(smp - smp.lag),
ratio.new = signif(pos.new/smp.new), digits = 3)
## Regions geometry
shp <- st_read("Limite_departamental", stringsAsFactors = F)
shp <- shp %>%
st_transform(4326) %>%
select(Departamento = NOMBDEP)
# Append
dep <- merge(dep, shp, by.y = 'Departamento', by.x = 'dep', all.x = T)
dep <- st_as_sf(dep, sf_column_name = 'geometry')
dep <- merge(dep, pop %>% select(dep = REGION, pop))
dep <- dep %>% mutate(pos.hab = pos/pop*100000,
smp.hab = smp/pop*100000)
dep[dep$pos.new == 0, ]$pos.new.log <- 0
dep[dep$pas.new == 0, ]$pas.new.log <- 0
labels.new <- sprintf(
"<strong>%s</strong><br/<strong>Casos: </strong>%s",
dep$dep, dep$pos.new) %>% lapply(htmltools::HTML)
pal.newcases <- colorNumeric( palette="RdPu", domain = dep$pos.new.log, na.color="transparent")
leaflet(dep) %>%
addTiles(urlTemplate = 'http://a.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png',
options = providerTileOptions(minZoom = 5, maxZoom = 6)) %>%
addPolygons(fillColor = pal.newcases(dep$pos.new.log),
weight = 2,
opacity = 1,
color = "white",
dashArray = "",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels.new,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend("bottomleft", pal=pal.newcases, values = dep$pos.new.log, title= 'Casos', labFormat = labelFormat(transform = function(x) round(exp(x))))%>%
setMaxBounds(lng1 = -90.648918,
lat1 = 4.991423,
lng2 = -59.605965,
lat2 = -23.920121) %>%
addEasyButton(easyButton(
icon="fa-info-circle", title="Información",
onClick=JS("function(gd) {
alert('Muestra los casos nuevos por departamento. El gradiente de colores indica mayor cantidad de casos nuevos en colores más oscuros. Departamentos sin color no han reportado casos nuevos.');
}")))  %>%
suspendScroll(sleep = TRUE, sleepTime = 750, wakeTime = 750,
sleepNote = TRUE, hoverToWake = F,
wakeMessage = "Click para utilizar el mapa", sleepOpacity = 0.7)
labels.new <- sprintf(
"<strong>%s</strong><br/<strong>Casos: </strong>%s",
dep$dep, dep$pos.new) %>% lapply(htmltools::HTML)
pal.newcases <- colorNumeric( palette="RdPu", domain = dep$pos.new.log, na.color="transparent")
leaflet(dep) %>%
addTiles(urlTemplate = 'http://a.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png',
options = providerTileOptions(minZoom = 5, maxZoom = 6)) %>%
addPolygons(fillColor = pal.newcases(dep$pos.new.log),
weight = 2,
opacity = 1,
color = "white",
dashArray = "",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels.new,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend("bottomleft", pal=pal.newcases, values = dep$pos.new.log, title= 'Casos', labFormat = labelFormat(transform = function(x) round(exp(x))))%>%
setMaxBounds(lng1 = -90.648918,
lat1 = 4.991423,
lng2 = -59.605965,
lat2 = -23.920121) %>%
addEasyButton(easyButton(
icon="fa-info-circle", title="Información",
onClick=JS("function(gd) {
alert('Muestra los casos nuevos por departamento. El gradiente de colores indica mayor cantidad de casos nuevos en colores más oscuros. Departamentos sin color no han reportado casos nuevos.');
}")))  %>%
# suspendScroll(sleep = TRUE, sleepTime = 750, wakeTime = 750,
# sleepNote = TRUE, hoverToWake = F,
# wakeMessage = "Click para utilizar el mapa", sleepOpacity = 0.7) %>%
NULL
labels.new <- sprintf(
"<strong>%s</strong><br/<strong>Casos: </strong>%s",
dep$dep, dep$pos.new) %>% lapply(htmltools::HTML)
pal.newcases <- colorNumeric( palette="RdPu", domain = dep$pos.new.log, na.color="transparent")
leaflet(dep) %>%
addTiles(urlTemplate = 'http://a.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png',
options = providerTileOptions(minZoom = 5, maxZoom = 6)) %>%
addPolygons(fillColor = pal.newcases(dep$pos.new.log),
weight = 2,
opacity = 1,
color = "white",
dashArray = "",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels.new,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend("bottomleft", pal=pal.newcases, values = dep$pos.new.log, title= 'Casos', labFormat = labelFormat(transform = function(x) round(exp(x))))%>%
setMaxBounds(lng1 = -90.648918,
lat1 = 4.991423,
lng2 = -59.605965,
lat2 = -23.920121) %>%
addEasyButton(easyButton(
icon="fa-info-circle", title="Información",
onClick=JS("function(gd) {
alert('Muestra los casos nuevos por departamento. El gradiente de colores indica mayor cantidad de casos nuevos en colores más oscuros. Departamentos sin color no han reportado casos nuevos.');
}")))
dep <-
deps %>%
dplyr::select(dat = Fecha,
dep = REGION,
pos = Positivos_totales,
pos.imp = PositivosImputados_totales,
pas =Fallecidos,
smp =Total_muestras) %>%
dplyr::mutate(pas = pas %>% if_else(is.na(.), 0, .)) %>%
group_by(dep) %>%
dplyr::mutate(pos.lag = lag(pos, n = 1),
pos.imp.lag = lag(pos.imp, n = 1),
pas.lag = lag(pas, n = 1),
smp.lag = lag(smp, n = 1)) %>%
dplyr::filter(dat == c.date) %>%
dplyr::mutate(pos.new = abs(pos - pos.lag),
pos.imp.new = abs(pos.imp - pos.imp.lag),
pas.new = abs(pas - pas.lag),
smp.new = abs(smp - smp.lag),
ratio.new = signif(pos.new/smp.new), digits = 3,
pos.new.log = log(pos.new),
pas.new.log = log(pas.new)) %>%
mutate(pos.new.log = replace(pos.new.log, pos.new == 0, 0),
pas.new.log = replace(pas.new.log, pas.new == 0, 0))
nac <- rio::import("https://github.com/jincio/COVID_19_PERU/blob/master/reportes_minsa.xlsx?raw=true")
nac <- rio::import("https://github.com/jincio/COVID_19_PERU/blob/master/reportes_minsa.xlsx?raw=true")
library(tidyverse)
dep <- rio::import("https://github.com/jincio/COVID_19_PERU/blob/master/reportes_minsa.xlsx?raw=true", sheet = 3)
dep2 <-
dep %>%
dplyr::select(dat = Fecha,
dep = ifelse(REGION== "LIMA METROPOLITANA" | REGION==  "LIMA REGIÓN","LIMA",REGION),
pos = Positivos_totales,
pos.imp = PositivosImputados_totales,
pas =Fallecidos,
smp =Total_muestras,
smp.imp =MuestrasImputadas_totales
)
dep %>%
dplyr::select(dat = Fecha,
dep = ifelse(REGION== "LIMA METROPOLITANA" | REGION==  "LIMA REGIÓN","LIMA",REGION),
pos = Positivos_totales,
pos.imp = PositivosImputados_totales,
pas =Fallecidos,
smp =Total_muestras,
smp.imp =MuestrasImputadas_totales
)
dep %>%
dplyr::select(dat = Fecha,
dep = if_else(REGION== "LIMA METROPOLITANA" | REGION==  "LIMA REGIÓN","LIMA",REGION),
pos = Positivos_totales,
pos.imp = PositivosImputados_totales,
pas =Fallecidos,
smp =Total_muestras,
smp.imp =MuestrasImputadas_totales
)
dep
dep2 <-
dep %>%
dplyr::select(dat = Fecha,
dep = REGION,
pos = Positivos_totales,
pos.imp = PositivosImputados_totales,
pas =Fallecidos,
smp =Total_muestras,
smp.imp =MuestrasImputadas_totales
) %>%
dplyr::mutate(dep = if_else(dep == "LIMA METROPOLITANA" | dep==  "LIMA REGIÓN","LIMA",dep))
dep2 <-
dep %>%
dplyr::select(dat = Fecha,
dep = REGION,
pos = Positivos_totales,
pos.imp = PositivosImputados_totales,
pas =Fallecidos,
smp =Total_muestras,
smp.imp =MuestrasImputadas_totales
) %>%
dplyr::mutate(dep = if_else(dep == "LIMA METROPOLITANA" | dep==  "LIMA REGIÓN","LIMA",dep)) %>%
group_by(dat,dep) %>% summarise_all()
?summarise_all
dep %>%
dplyr::select(dat = Fecha,
dep = REGION,
pos = Positivos_totales,
pos.imp = PositivosImputados_totales,
pas =Fallecidos,
smp =Total_muestras,
smp.imp =MuestrasImputadas_totales
) %>%
dplyr::mutate(dep = if_else(dep == "LIMA METROPOLITANA" | dep==  "LIMA REGIÓN","LIMA",dep)) %>%
group_by(dat,dep) %>% summarise_all( sum, na.rm = TRUE)
dep2 <-
dep %>%
dplyr::select(dat = Fecha,
dep = REGION,
pos = Positivos_totales,
pos.imp = PositivosImputados_totales,
pas =Fallecidos,
smp =Total_muestras,
smp.imp =MuestrasImputadas_totales
) %>%
dplyr::mutate(dep = if_else(dep == "LIMA METROPOLITANA" | dep==  "LIMA REGIÓN","LIMA",dep)) %>%
group_by(dat,dep) %>% summarise_all( sum, na.rm = TRUE)
View(dep2)
dep <-
dep %>%
dplyr::select(dat = Fecha,
dep = REGION,
pos = Positivos_totales,
pos.imp = PositivosImputados_totales,
pas =Fallecidos,
smp =Total_muestras,
smp.imp =MuestrasImputadas_totales
) %>%
dplyr::mutate(dep = if_else(dep == "LIMA METROPOLITANA" | dep==  "LIMA REGIÓN","LIMA",dep))
View(dep)
dep <- rio::import("https://github.com/jincio/COVID_19_PERU/blob/master/reportes_minsa.xlsx?raw=true", sheet = 3)
dep2 <-
dep %>%
dplyr::select(dat = Fecha,
dep = REGION,
pos = Positivos_totales,
pos.imp = PositivosImputados_totales,
pas =Fallecidos,
smp =Total_muestras,
smp.imp =MuestrasImputadas_totales
) %>%
dplyr::mutate(dep = if_else(dep == "LIMA METROPOLITANA" | dep==  "LIMA REGIÓN","LIMA",dep)) %>%
group_by(dat,dep) %>% summarise_all( sum, na.rm = F) %>% ungroup()
View(dep2)
