labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend("bottomleft", pal = pal.cases, values = dep$pos, title= 'Cantidad de casos')
leaflet(dep) %>%
addTiles(urlTemplate = 'http://a.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png') %>%
addPolygons(fillColor = pal.cases(dep$pos),
weight = 2,
opacity = 1,
color = "white",
dashArray = "",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels.total,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend("bottomleft", pal =pal.cases, values = dep$pos, title= 'Cantidad de casos')
library(flexdashboard)
library(rio)
library(tidyverse)
library(XML)
library(httr)
library(RCurl)
library(sf)
library(lubridate)
library(leaflet)
library(colorspace)
library(DT)
dat <- rio::import("https://github.com/jincio/COVID_19_PERU/blob/master/docs/reportes_minsa.xlsx?raw=true")
dep <- rio::import("https://github.com/jincio/COVID_19_PERU/blob/master/docs/reportes_minsa.xlsx?raw=true", sheet = 2)
c.date <- max(dep$Fecha)
dep <-
dep %>%
dplyr::select(dat = Fecha,
dep = REGION,
pos = Positivos_totales,
pos.imp = PositivosImputados_totales,
pas =Fallecidos,
smp =Total_muestras) %>%
mutate(pas = pas %>% if_else(is.na(.), 0, .)) %>%
group_by(dep) %>%
mutate(pos.lag = lag(pos, n = 1),
pos.imp.lag = lag(pos.imp, n = 1),
pas.lag = lag(pas, n = 1),
smp.lag = lag(smp, n = 1)) %>%
filter(dat == c.date) %>%
mutate(pos.new = abs(pos - pos.lag),
pos.imp.new = abs(pos.imp - pos.imp.lag),
pas.new = abs(pas - pas.lag),
smp.new = abs(smp - smp.lag))
## Regions geometry
shp <- st_read("Limite_departamental", stringsAsFactors = F)
shp <- shp %>%
st_transform(4326) %>%
select(Departamento = NOMBDEP)
# Append
dep <- merge(dep, shp, by.y = 'Departamento', by.x = 'dep', all.x = T)
dep <- st_as_sf(dep, sf_column_name = 'geometry')
## aes
pal_fun <- colorQuantile("YlOrRd", NULL, n = 5)
pal_smp <- colorQuantile("Blues", NULL, n = 5)
pal.cases <- colorNumeric( palette="YlOrRd", domain = log(dep$pos), na.color="transparent")
labels.total <- sprintf(
"<strong>%s</strong><br/<strong>Value: </strong>%s",
dep$dep, dep$pos) %>% lapply(htmltools::HTML)
labels.new <- sprintf(
"<strong>%s</strong><br/<strong>Value: </strong>%s",
dep$dep, dep$pos.new) %>% lapply(htmltools::HTML)
labels.pas <- sprintf(
"<strong>%s</strong><br/<strong>Value: </strong>%s",
dep[dep$pas > 0,]$dep, dep[dep$pas > 0,]$pas) %>% lapply(htmltools::HTML)
labels.smp <- sprintf(
"<strong>%s</strong><br/<strong>Value: </strong>%s",
dep$dep, dep$smp) %>% lapply(htmltools::HTML)
labels.smp.new <- sprintf(
"<strong>%s</strong><br/<strong>Value: </strong>%s",
dep$dep, dep$smp.new) %>% lapply(htmltools::HTML)
leaflet(dep) %>%
addTiles(urlTemplate = 'http://a.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png') %>%
addPolygons(fillColor = pal.cases(log(dep$pos)),
weight = 2,
opacity = 1,
color = "white",
dashArray = "",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels.total,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend("bottomleft", pal =pal.cases, values = log(dep$pos), title= 'Cantidad de casos')
leaflet(dep) %>%
addTiles(urlTemplate = 'http://a.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png') %>%
addPolygons(fillColor = pal.cases(log(dep$pos)),
weight = 2,
opacity = 1,
color = "white",
dashArray = "",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels.total,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend("bottomleft", pal =pal.cases, values = log(dep$pos), title= 'Log de casos')
install.packages('slider')
install.packages('plotly')
install.packages('ggthemr')
devtools::install_github('cttobin/ggthemr')
Sys.setenv(R_REMOTES_NO_ERRORS_FROM_WARNINGS="true")
devtools::install_github('cttobin/ggthemr')
library(flexdashboard)
library(rio)
library(tidyverse)
install.packages('tidyverse')
install.packages("tidyverse")
library(flexdashboard)
install.packages("Rcpp")
library(flexdashboard)
library(rio)
library(tidyverse)
library(XML)
library(httr)
library(RCurl)
library(sf)
library(lubridate)
library(leaflet)
library(colorspace)
library(DT)
library(zoo)
library(slider)
library(plotly)
dat <- rio::import("https://github.com/jincio/COVID_19_PERU/blob/master/docs/reportes_minsa.xlsx?raw=true")
deps <- rio::import("https://github.com/jincio/COVID_19_PERU/blob/master/docs/reportes_minsa.xlsx?raw=true", sheet = 2)
dat0 <- deps %>%
dplyr::select(REGION, Fecha, PositivosImputados_totales, Positivos_PR) %>%
inner_join(pop, by="REGION") %>%
arrange(REGION, Fecha) %>%
group_by(REGION) %>%
dplyr::mutate(new = PositivosImputados_totales - lag(PositivosImputados_totales, default = 0),
mav_new = slide_dbl(new, ~mean(.x, na.rm = TRUE), .before = 6),
pmav_new = 1000000*mav_new/pop,
max = max(mav_new))
pop <- read_csv("data/peru_pop_stratum.csv") %>%
group_by(dep_adm1) %>%
dplyr::summarise(pop = sum(N)) %>%
mutate(REGION = toupper(dep_adm1))
dat0 <- deps %>%
dplyr::select(REGION, Fecha, PositivosImputados_totales, Positivos_PR) %>%
inner_join(pop, by="REGION") %>%
arrange(REGION, Fecha) %>%
group_by(REGION) %>%
dplyr::mutate(new = PositivosImputados_totales - lag(PositivosImputados_totales, default = 0),
mav_new = slide_dbl(new, ~mean(.x, na.rm = TRUE), .before = 6),
pmav_new = 1000000*mav_new/pop,
max = max(mav_new))
dat <- dat0 %>%
dplyr::filter(max>15)
f <- dat %>%
dplyr::filter(!is.na(Positivos_PR)) %>%
slice(1)
today <- Sys.Date()
data_wide <- dat %>%
select(Fecha,REGION,mav_new) %>%
spread(REGION, mav_new) %>%
dplyr::mutate(tm = difftime(today ,Fecha , units = c("days")))
data_wide <- data_wide %>% dplyr::rename(LA_LIBERTAD = `LA LIBERTAD`)
vars <- setdiff(names(data_wide), c("Fecha","tm"))
plots <- lapply(vars, function(var) {
plot_ly(data_wide,
x = ~Fecha,
y = as.formula(paste0("~", var)),
text = paste(data_wide$tm, "días desde hoy"),
hovertemplate = paste('<b>Fecha</b>: %{x}',
'<br><b>Media Móvil</b>: %{y:.2f}<br>',
'<b>%{text}</b>')
) %>%
add_lines(name = var,
legendgroup = 'group1',
showlegend = F,
line = list(color = "rgb(166,55,63)",
width = 4)
) %>%
add_segments(x = "2020-04-08", xend = "2020-04-08",
y = 0, yend = max(data_wide[var],na.rm = T),
text="2020-04-08",name="Inicio de P.R's",
hovertemplate = paste('<b>%{text}</b>'),
legendgroup = 'group2',
showlegend = ifelse(var == vars[length(vars)],TRUE,FALSE),
width=2,
line = list(color = "rgb(60,141,47)",
width = 3,
dash = "dot")
) %>%
layout(xaxis = list(range = c(min(data_wide$Fecha),
max(data_wide$Fecha))),
annotations = list(text = ifelse(var=="LA_LIBERTAD",
"<b>LA LIBERTAD<b>",
paste0("<b>",var,"<b>")),
x = 0,y = 1.15,
yref = "paper",xref = "paper",
xanchor = "left",yanchor = "top",
showarrow = FALSE,
font = list(size = 16)),
legend=list(title=list(text='<b> Leyenda </b>')),
showlegend =T)
})
subplot(plots, nrows = length(plots)/2, shareX = T, titleX = F) %>%
layout(margin =0.12,
title = list(text = "Media móvil (7 días) de casos nuevos por Regiones",
font = list(size = 24)),
annotations = list(
list(text = "Fecha",
x = 0.5,
y = -0.1,
yref = "paper",
xref = "paper",
showarrow = FALSE,
font = list(size = 16)),
list(text = "Media móvil - Número de casos",
x = -0.1,
y = 0.5,
yref = "paper",
xref = "paper",
showarrow = FALSE,
font = list(size = 16),
textangle = -90))
)
c.date <- max(dep$Fecha)
dat1 <- dat %>%
dplyr::mutate(pos_new = Positivos-lag(Positivos,default = 0),
des_new = Descartados-lag(Descartados,default = 0)) %>%
group_by(Dia) %>%
dplyr::summarise(pos_new = sum(pos_new), des_new = sum(des_new)) %>%
dplyr::mutate(cum_pos = cumsum(pos_new),
tot_pruebas = pos_new+des_new,
tm = difftime(today ,Dia , units = c("days")))
dat <- rio::import("https://github.com/jincio/COVID_19_PERU/blob/master/docs/reportes_minsa.xlsx?raw=true")
dat1 <- dat %>%
dplyr::mutate(pos_new = Positivos-lag(Positivos,default = 0),
des_new = Descartados-lag(Descartados,default = 0)) %>%
group_by(Dia) %>%
dplyr::summarise(pos_new = sum(pos_new), des_new = sum(des_new)) %>%
dplyr::mutate(cum_pos = cumsum(pos_new),
tot_pruebas = pos_new+des_new,
tm = difftime(today ,Dia , units = c("days")))
dat1 <- dat %>%
dplyr::mutate(pos_new = Positivos-lag(Positivos,default = 0),
des_new = Descartados-lag(Descartados,default = 0)) %>%
group_by(Dia) %>%
dplyr::summarise(pos_new = sum(pos_new), des_new = sum(des_new)) %>%
dplyr::mutate(cum_pos = cumsum(pos_new),
tot_pruebas = pos_new+des_new,
tm = difftime(today ,Dia , units = c("days")))
dat2 <- dat1 %>%
dplyr::mutate(neg_new = tot_pruebas-pos_new) %>%
dplyr::select(Dia, pos_new, neg_new) %>%
dplyr::rename(Positivo = pos_new, Negativo = neg_new) %>%
gather(res, count, -Dia) %>%
uncount(count)
dat3 <- dat1 %>%
dplyr::mutate(new = cum_pos - lag(cum_pos, default = 0),
mav_new = slide_dbl(new, ~mean(.x, na.rm = TRUE), .before = 6),
max = max(mav_new)
)
dat4 <- dat0%>%
select(Fecha,PositivosImputados_totales,REGION,new) %>%
spread(REGION, new) %>%
mutate(tm = difftime(today ,Fecha , units = c("days")))
plot_ly(dat1) %>%
add_trace(x = ~Dia, y = ~pos_new,
type = 'bar', name = 'Casos Nuevos',
marker = list(color = 'rgb(128,160,53)'),
text = paste(dat1$tm, "días desde hoy"),
hovertemplate = paste('<b>Fecha</b>: %{x}',
'<br><b>Nuevos Casos:</b> %{y}</br>',
'<b>%{text}</b>'))%>%
add_trace(x = ~Dia, y = ~cum_pos,
type = 'scatter',
mode = 'lines+markers',
name = 'Casos Acumulados',
yaxis = 'y2',
line = list(color = 'rgb(35,104,99)'),
marker = list(color = 'rgb(35,104,99)'),
text = paste(dat1$tm, "días desde hoy"),
hovertemplate = ~paste('<b>Fecha</b>: %{x}',
"<br><b>Casos Acumulados: %{y}</b></br>",
'<b>%{text}</b>')) %>%
layout(title = 'Casos nuevos y acumulados de Perú',
xaxis = list(title = "Fecha"),
yaxis = list(side = 'left', title = 'Casos Nuevos por día', showgrid = FALSE, zeroline = FALSE),
yaxis2 = list(side = 'right', overlaying = "y", title = 'Casos acumulados por día', showgrid = FALSE, zeroline = FALSE))%>%
add_segments(x = "2020-04-08", xend = "2020-04-08",
y = 0, yend=max(dat1$pos_new),
text="2020-04-08",name="Inicio de P.R's",
hovertemplate = paste('<b>%{text}</b>'),
legendgroup = 'group2',
width=2,
line = list(color = "rgb(166,55,63)",
width = 3,
dash = "dot")
)
plot_ly(dat1) %>%
add_trace(x = ~Dia, y = ~pos_new,
type = 'bar', name = 'Casos Nuevos',
marker = list(color = 'rgb(128,160,53)'),
text = paste(dat1$tm, "días desde hoy"),
hovertemplate = paste('<b>Fecha</b>: %{x}',
'<br><b>Nuevos Casos:</b> %{y}</br>',
'<b>%{text}</b>'))
plot_ly(dat1) %>%
add_trace(x = ~Dia, y = ~pos_new,
type = 'bar', name = 'Casos Nuevos',
marker = list(color = 'rgb(128,160,53)'),
text = paste(dat1$tm, "días desde hoy"),
hovertemplate = paste('<b>Fecha</b>: %{x}',
'<br><b>Nuevos Casos:</b> %{y}</br>',
'<b>%{text}</b>'))%>%
add_trace(x = ~Dia, y = ~cum_pos,
type = 'scatter',
mode = 'lines+markers',
name = 'Casos Acumulados',
yaxis = 'y2',
line = list(color = 'rgb(35,104,99)'),
marker = list(color = 'rgb(35,104,99)'),
text = paste(dat1$tm, "días desde hoy"),
hovertemplate = ~paste('<b>Fecha</b>: %{x}',
"<br><b>Casos Acumulados: %{y}</b></br>",
'<b>%{text}</b>')) %>%
layout(title = 'Casos nuevos y acumulados de Perú',
xaxis = list(title = "Fecha"),
yaxis = list(side = 'left', title = 'Casos Nuevos por día', showgrid = FALSE, zeroline = FALSE),
yaxis2 = list(side = 'right', overlaying = "y", title = 'Casos acumulados por día', showgrid = FALSE, zeroline = FALSE))
plot_ly(dat1) %>%
add_trace(x = ~Dia, y = ~pos_new,
type = 'bar', name = 'Casos Nuevos',
marker = list(color = 'rgb(128,160,53)'),
text = paste(dat1$tm, "días desde hoy"),
hovertemplate = paste('<b>Fecha</b>: %{x}',
'<br><b>Nuevos Casos:</b> %{y}</br>',
'<b>%{text}</b>'))%>%
add_trace(x = ~Dia, y = ~cum_pos,
type = 'scatter',
mode = 'lines+markers',
name = 'Casos Acumulados',
yaxis = 'y2',
line = list(color = 'rgb(35,104,99)'),
marker = list(color = 'rgb(35,104,99)'),
text = paste(dat1$tm, "días desde hoy"),
hovertemplate = ~paste('<b>Fecha</b>: %{x}',
"<br><b>Casos Acumulados: %{y}</b></br>",
'<b>%{text}</b>')) %>%
layout(title = 'Casos nuevos y acumulados de Perú',
xaxis = list(title = "Fecha"),
yaxis = list(side = 'left', title = 'Casos Nuevos por día', showgrid = FALSE, zeroline = FALSE),
yaxis2 = list(side = 'right', overlaying = "y", title = 'Casos acumulados por día', showgrid = FALSE, zeroline = FALSE))%>%
add_segments(x = "2020-04-08", xend = "2020-04-08",
y = 0, yend=max(dat1$pos_new),
text="2020-04-08",name="Inicio de P.R's",
hovertemplate = paste('<b>%{text}</b>'),
legendgroup = 'group2',
width=2,
line = list(color = "rgb(166,55,63)",
width = 3,
dash = "dot")
)
devtools::install_github('cttobin/ggthemr')
View(dat)
dat0 <- deps %>%
dplyr::select(REGION, Fecha, PositivosImputados_totales, Positivos_PR) %>%
inner_join(pop, by="REGION") %>%
arrange(REGION, Fecha) %>%
group_by(REGION) %>%
dplyr::mutate(new = PositivosImputados_totales - lag(PositivosImputados_totales, default = 0),
mav_new = slide_dbl(new, ~mean(.x, na.rm = TRUE), .before = 6),
pmav_new = 1000000*mav_new/pop,
max = max(mav_new))
dat <- dat0 %>%
dplyr::filter(max>15)
f <- dat %>%
dplyr::filter(!is.na(Positivos_PR)) %>%
slice(1)
today <- ymd(Sys.Date())
dat1 <- dat %>%
dplyr::mutate(pos_new = Positivos-lag(Positivos,default = 0),
des_new = Descartados-lag(Descartados,default = 0),
Dia = ymd(Dia)) %>%
group_by(Dia) %>%
dplyr::summarise(pos_new = sum(pos_new), des_new = sum(des_new)) %>%
dplyr::mutate(cum_pos = cumsum(pos_new),
tot_pruebas = pos_new+des_new,
tm = difftime(today, Dia , units = c("days")))
dat0 <- deps %>%
dplyr::select(REGION, Fecha, PositivosImputados_totales, Positivos_PR) %>%
inner_join(pop, by="REGION") %>%
arrange(REGION, Fecha) %>%
group_by(REGION) %>%
dplyr::mutate(new = PositivosImputados_totales - lag(PositivosImputados_totales, default = 0),
mav_new = slide_dbl(new, ~mean(.x, na.rm = TRUE), .before = 6),
pmav_new = 1000000*mav_new/pop,
max = max(mav_new))
today <- ymd(Sys.Date())
dat1 <- dat %>%
dplyr::mutate(pos_new = Positivos-lag(Positivos,default = 0),
des_new = Descartados-lag(Descartados,default = 0),
Dia = ymd(Dia)) %>%
group_by(Dia) %>%
dplyr::summarise(pos_new = sum(pos_new), des_new = sum(des_new)) %>%
dplyr::mutate(cum_pos = cumsum(pos_new),
tot_pruebas = pos_new+des_new,
tm = difftime(today, Dia , units = c("days")))
dat <- rio::import("https://github.com/jincio/COVID_19_PERU/blob/master/docs/reportes_minsa.xlsx?raw=true")
deps <- rio::import("https://github.com/jincio/COVID_19_PERU/blob/master/docs/reportes_minsa.xlsx?raw=true", sheet = 2)
pop <- read_csv("data/peru_pop_stratum.csv") %>%
group_by(dep_adm1) %>%
dplyr::summarise(pop = sum(N)) %>%
mutate(REGION = toupper(dep_adm1))
dat0 <- deps %>%
dplyr::select(REGION, Fecha, PositivosImputados_totales, Positivos_PR) %>%
inner_join(pop, by="REGION") %>%
arrange(REGION, Fecha) %>%
group_by(REGION) %>%
dplyr::mutate(new = PositivosImputados_totales - lag(PositivosImputados_totales, default = 0),
mav_new = slide_dbl(new, ~mean(.x, na.rm = TRUE), .before = 6),
pmav_new = 1000000*mav_new/pop,
max = max(mav_new))
today <- ymd(Sys.Date())
dat1 <- dat %>%
dplyr::mutate(pos_new = Positivos-lag(Positivos,default = 0),
des_new = Descartados-lag(Descartados,default = 0),
Dia = ymd(Dia)) %>%
group_by(Dia) %>%
dplyr::summarise(pos_new = sum(pos_new), des_new = sum(des_new)) %>%
dplyr::mutate(cum_pos = cumsum(pos_new),
tot_pruebas = pos_new+des_new,
tm = difftime(today, Dia , units = c("days")))
dat2 <- dat1 %>%
dplyr::mutate(neg_new = tot_pruebas-pos_new) %>%
dplyr::select(Dia, pos_new, neg_new) %>%
dplyr::rename(Positivo = pos_new, Negativo = neg_new) %>%
gather(res, count, -Dia) %>%
uncount(count)
dat3 <- dat1 %>%
dplyr::mutate(new = cum_pos - lag(cum_pos, default = 0),
mav_new = slide_dbl(new, ~mean(.x, na.rm = TRUE), .before = 6),
max = max(mav_new)
)
dat4 <- dat0 %>%
select(Fecha,PositivosImputados_totales,REGION,new) %>%
spread(REGION, new) %>%
mutate(tm = difftime(today, Fecha , units = c("days")))
plot_ly(dat1) %>%
add_trace(x = ~Dia, y = ~pos_new,
type = 'bar', name = 'Casos Nuevos',
marker = list(color = 'rgb(128,160,53)'),
text = paste(dat1$tm, "días desde hoy"),
hovertemplate = paste('<b>Fecha</b>: %{x}',
'<br><b>Nuevos Casos:</b> %{y}</br>',
'<b>%{text}</b>'))%>%
add_trace(x = ~Dia, y = ~cum_pos,
type = 'scatter',
mode = 'lines+markers',
name = 'Casos Acumulados',
yaxis = 'y2',
line = list(color = 'rgb(35,104,99)'),
marker = list(color = 'rgb(35,104,99)'),
text = paste(dat1$tm, "días desde hoy"),
hovertemplate = ~paste('<b>Fecha</b>: %{x}',
"<br><b>Casos Acumulados: %{y}</b></br>",
'<b>%{text}</b>')) %>%
layout(title = 'Casos nuevos y acumulados de Perú',
xaxis = list(title = "Fecha"),
yaxis = list(side = 'left', title = 'Casos Nuevos por día', showgrid = FALSE, zeroline = FALSE),
yaxis2 = list(side = 'right', overlaying = "y", title = 'Casos acumulados por día', showgrid = FALSE, zeroline = FALSE))%>%
add_segments(x = "2020-04-08", xend = "2020-04-08",
y = 0, yend=max(dat1$pos_new),
text="2020-04-08",name="Inicio de P.R's",
hovertemplate = paste('<b>%{text}</b>'),
legendgroup = 'group2',
width=2,
line = list(color = "rgb(166,55,63)",
width = 3,
dash = "dot")
)
plot_ly(dat1) %>%
add_trace(x = ~Dia, y = ~pos_new,
type = 'bar', name = 'Casos Nuevos',
marker = list(color = 'rgb(128,160,53)'),
text = paste(dat1$tm, "días desde hoy"),
hovertemplate = paste('<b>Fecha</b>: %{x}',
'<br><b>Nuevos Casos:</b> %{y}</br>',
'<b>%{text}</b>'))
